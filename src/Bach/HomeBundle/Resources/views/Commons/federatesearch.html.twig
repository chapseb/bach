{#
Copyright (c) 2014, Anaphore
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    (1) Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

    (2) Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in
    the documentation and/or other materials provided with the
    distribution.

    (3)The name of the author may not be used to
   endorse or promote products derived from this software without
   specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
#}

{% extends '::base.html.twig' %}

{% block search_path %}federate_search{%endblock %}
{% block fullfacet_path %}bach_fullfacet{%endblock %}
{% block do_search_path %}bach_do_search{% endblock %}
{% block geojson_path %}bach_geojson{% endblock %}

{% block title_extend %}{% if q is defined and q|trim != '' %} - {{ _('Search on "%term"')|replace({'%term': q}) }}{% endif %}{% endblock %}

{% block css %}
    {% if show_maps -%}
    {% stylesheets
        'js/leaflet/leaflet.css'
        'js/leaflet/leaflet.fullscreen/Control.FullScreen.css'
        'js/leaflet/leaflet.geosearch/l.geosearch.css'
        'js/leaflet/leaflet.markercluster/MarkerCluster.css'
        'js/leaflet/leaflet.markercluster/MarkerCluster.Default.css'
        output='assetic/css/compiled/leaflet_plugins.css'
        filter='cssrewrite'
    %}
    <link href="{{ asset_url }}" type="text/css" rel="stylesheet" media="screen" />
    {% endstylesheets %}
    {% endif %}
{% endblock %}


{% block container %}

    {% if searchResults is not defined %}
        {% block intro %}{% endblock %}
    {% endif %}

    <form action="{{ path(block('do_search_path'), {'form_name': search_form}) }}" method="post" {{ form_enctype(form) }} name="search" id="search">

    {% if by_year is defined or show_maps %}
        <ul class="interactions">

       {% if show_maps -%}
            <li><a id="sh_map" href="?show_map={% if show_map == true %}off{% else %}on{% endif %}" title="{{ _('Shows or hides map') }}"{% if show_map == false %} class="disabled"{% endif %}><img src="{% include '::images/map.html.twig' %}" alt="{{ _('Show/Hide map') }}"/></a></li>
        {%- endif %}


        {% if by_year is defined -%}
            {% if current_date == 'date_enregistrement' %}
                {% set display_date = _('record date') %}
            {% elseif current_date == 'classe' %}
                {% set display_date = _('class') %}
            {% elseif current_date == 'annee_naissance' %}
                {% set display_date = _('birthdate') %}
            {% else %}
                {% set display_date =  _('Date')|lower %}
            {%endif%}
        {#% if search_form == 'matricules'%#}
             <li><a id="sh_daterange" href="?show_daterange={% if show_daterange == true %}off{% else %}on{% endif %}"  {% if disable_select_daterange == true %}
title="{{ _('Show or hide the graph of distribution by %datetype%')|replace({'%datetype%':display_date}) }}" {% else %} title="{{ _('Shows or hides date range graph') }}" {% endif %} {% if show_daterange == false %} class="disabled"{% endif %}><img src="{% include '::images/calendar.html.twig' %}" alt="{{ _('Show/Hide date range') }}"/></a></li>
        {#%- endif %#}
        {% endif %}
        </ul>
    {% endif %}

        <div>
            {{ form_widget(form.query) }}
            {% if form.keep_filters is defined %}
            <div id="keepFilters" title="{{ _('Unckeck if you do not want to keep existing filters with your new search') }}">
                {{ form_label(form.keep_filters) }}
                {{ form_widget(form.keep_filters) }}
            </div>
            {% endif %}
            {% if form.pdf_filters is defined and matricules_listparameters is not defined %}
            <div id="keepFilters" title="{{ _('Ckeck if you want to search in pdf associated files') }}">
                {{ form_label(form.pdf_filters) }}
                {{ form_widget(form.pdf_filters) }}
            </div>
            {% endif %}

            {{ form_widget(form._token) }}
            {{ form_widget(form.perform_search) }}
        </div>
    </form>
{% if searchResults is defined %}
    <div id="newSearch">
            <a href="{{ path('federate_search') ~ "?clear_filters=1" }}" title="{{ _('New search')}}">{{_('Start a new search')}}</a>
    </div>
    {% endif %}

    <article class="tabs">
        <section id="ead">
            <h1><a href="#ead">Ead</a></h1>
                {% include 'BachHomeBundle:Default:ead_container.html.twig' with {'search_path': block('search_path')}%}
        </section>
        {% if from_doc_view is defined and from_doc_view is not null %}
        {% else %}
        <section id="matricules">
            <h1><a href="#matricules">Matricules</a></h1>
                {% if matriculesSearch['filters'] is not defined%}
                    {% set filters = null %}
                {% endif%}
                {% include 'BachHomeBundle:Matricules:mat_container.html.twig' with matriculesSearch %}
        </section>
        {% endif %}
    </article>
{% endblock %}

{% block js_calls %}
    {{ parent() }}
    {% javascripts
        'js/jquery-ui/jquery.ui.accordion.min.js'
        'js/jquery-ui/jquery.ui.menu.min.js'
        'js/jquery-ui/jquery.ui.autocomplete.min.js'
        'js/jquery-ui/jquery.ui.spinner.min.js'
        'js/jquery-ui/jquery.ui.tabs.min.js'
        'js/jquery-ui/jquery.ui.slider.min.js'
        output='assetic/js/compiled/search_jquery-ui.js'
    %}
        <script src="{{ asset_url }}" type="text/javascript"></script>
    {% endjavascripts %}
    {% if by_year is defined %}
        {% javascripts
            'js/flot/jquery.flot.min.js'
            'js/flot/jquery.flot.selection.min.js'
            'js/flot/jquery.flot.resize.min.js'
            output='assetic/js/compiled/search_dates.js'
        %}
            <script src="{{ asset_url }}" type="text/javascript"></script>
        {% endjavascripts %}
    {% endif %}
    <script src="{{ asset('js/jquery.cookie.js') }}" type="text/javascript"></script>
    {% if show_maps %}
        <script src="{{ asset('js/leaflet/leaflet.js') }}" type="text/javascript"></script>
        {% javascripts
            'js/leaflet/leaflet.fullscreen/Control.FullScreen.js'
            'js/leaflet/leaflet.geosearch/l.control.geosearch.js'
            'js/leaflet/leaflet.geosearch/l.geosearch.provider.openstreetmap.js'
            output='assetic/js/compiled/leaflet_plugins.js'
        %}
        <script src="{{ asset_url }}" type="text/javascript"></script>
        {% endjavascripts %}
        <script src="{{ asset('js/leaflet/leaflet.markercluster/leaflet.markercluster.js') }}" type="text/javascript"></script>
    {% endif %}
    <!--[if lte IE 8]><script src="{{ asset('js/jqplot/excanvas.min.js') }}" type="text/javascript"></script><![endif]-->
    <script type="text/javascript" src="{{ asset('dewplayer/swfobject.js') }}"></script>
{% endblock %}

{% block mobile_js_on %}
    $('.show_more a').unbind('click');
{% endblock %}

{% block mobile_js_off %}
    $('#keepFilters').tooltip();
{% endblock %}

{% block javascripts %}
    $(function(){
        if ($('#ead').height() > ($('#matricules').height())) {
            $('#matricules').height($('#ead').height());
            $('.menu').height($('#ead').height());
        }
        else {
            $('#ead').height($('#matricules').height());
            $('.menu').height($('#matricules').height());
        }

        if (window.location.hash) {
            window.location.hash;
        } else {
            window.location.hash = '#ead';
        };
    });

    $.cookie.json = true;
    var _view_params = $.cookie('{{ cookie_param_name }}');

    if ( !_view_params ) {
        _view_params = {
            'daterange': {% if show_daterange == true %}true{% else %}false{% endif %},
            'map':       {% if show_map == true %}true{% else %}false{% endif %}
        };
    }

    $("#search").submit(function(event) {
        var valueSearch = $("#searchQuery_query").val();
        valueSearch = valueSearch.replace(/\//g," ");
        $("#searchQuery_query").val(valueSearch);
    });

    function filterOnDate(min_date, max_date, type_date, search_form) {
        {% if q is defined and q != '' -%}
        var _new_loc = document.location.href;
        {% else %}
        var _new_loc = '{{ path(block('search_path'), {'form_name': search_form})|raw }}';
        {% endif %}
        var n = _new_loc.indexOf('?');
        var _new_loc = _new_loc.substring(0, n != -1 ? n : _new_loc.lenght);
        _new_loc += '?form_name=' + search_form  + '&filter_field[]=date_' + type_date + '_min&filter_value[]=' + min_date +
            '&filter_field[]=date_' + type_date + '_max&filter_value[]=' + max_date;
        document.location = _new_loc;
    }

    $('#facets, #facets_matricules').accordion({
        icons: {
            header: 'ui-icon-circle-plus',
            activeHeader: 'ui-icon-circle-minus'
        },
        heightStyle: 'content',
        {% if active_facet is defined -%}
        active: {{ active_facet }},
        {% endif %}
        collapsible: true
    });

    {% if q != '' %}
        {% set qt = q %}
    {% else %}
        {% set qt = '*:*' %}
    {% endif %}
    $('.show_more a').click(function() {
        clickCookie();
        var _this = $(this);
        var _facet_name = $(_this.parents('div')[0]).prev('h3').text();

        var _elt = $('<div id="display_facets" title="' + _facet_name + '"></div>');
        _elt.appendTo('body');

        var _width = $(window).width() * 0.8;
        var _height = $(window).height() * 0.8;

        var _index = _this.attr('href').replace('{{ path(block('search_path'), {form_name: search_form, query_terms: qt, page: page})|raw }}/', '');
        _index = _index.substr(_index.lastIndexOf('/')+1);
        if (_index.toLowerCase().indexOf("form_name=matricules") >= 0){
            var _url = '{{ path('bach_matricules_fullfacet', {form_name: 'matricules', query_terms: qt, name: 'THENAME'})|raw }}'.replace('THENAME', _index);
        }
        else {
            var _url = '{{ path(block('fullfacet_path'), {form_name: search_form, query_terms: qt, name: 'THENAME'})|raw }}'.replace('THENAME', _index);
        }

        $.ajax({
            url: _url,
            data: {
                orig_href: _url
            },
            type: 'POST',
            {% include '::loader.js.twig' with {'error_message': _('An error occured loading terms :(')} %}
            success: function(data) {
                _elt.append(data);
                _elt.dialog({
                    height: _height,
                    width: _width,
                    modal: true,
                    close: function(event, ui){
                        _elt.remove();
                    }
                });
            }
        });

        return false;
    });

    {% if available_orders|length > 0 %}
    $('#results_order').change(function(){
        var _da_url = '{{ path(block('search_path'), {form_name: search_form, query_terms: q, results_order: 'ORDER'})|raw }}';
        window.location.href  = _da_url.replace('ORDER', $('#results_order option:selected').val());
    });
    $('#results_order_mat').change(function(){
        var _da_url = '{{ path(block('search_path'), {form_name: 'matricules', query_terms: q, results_order: 'ORDER'})|raw }}';
        window.location.href  = _da_url.replace('ORDER', $('#results_order_mat option:selected').val());
    });
    {% endif %}

    /**************/
    // plot dates //
    /**************/
    {% if by_year is defined -%}
        var plot_options = {
            series: {
                bars: {
                    show: true,
                    align: "center",
                    barWidth: 0.9,
                    fill: true,
                    fillColor: "{{ _plot_fill_color }}"
                }
            },
            colors: ["rgba(163,150,141,0)"],
            legend: { noColumns: 2 },
            xaxis: { tickDecimals: 0 },
            yaxis: { tickDecimals: 0 },
            {% if disable_select_daterange is not defined or disable_select_daterange == false %}
            selection: {
                mode: "x",
                color: '{{ _plot_selection_color }}'
            },
            {% endif %}
            grid: {
                backgroundColor: null,
                borderWidth: 1,
                borderColor: "{{ _plot_border_color }}"
            },
            shadowSize: 0
        };

        var _dates_plot = $('#dates_plot');
        var _dates_plot_mat = $('#dates_plot_mat');
        var plot;

        var _initPlot = function() {
            plot = $.plot(_dates_plot, [{{ by_year|json_encode|raw }}], plot_options);

            {% if disable_select_daterange is not defined or disable_select_daterange == false %}
            plot.setSelection({
                xaxis: {
                    from: {{by_year_min}}-0.45,
                    to: {{by_year_max}}+0.45
                }
            });

            _dates_plot.bind("plotselected", function (event, ranges) {
                if ( Math.floor(ranges.xaxis.from) === Math.floor(ranges.xaxis.to)) {
                    filterOnDate(
                        Math.floor(ranges.xaxis.from),
                        Math.floor(ranges.xaxis.to),
                        '{{ current_date }}',
                        'default'
                    );
                } else {
                    filterOnDate(
                        Math.round(ranges.xaxis.from),
                        Math.round(ranges.xaxis.to),
                        '{{ current_date }}',
                        'default'
                    );
                }

            }).tooltip({
                position: {
                    my: 'left bottom',
                    at: 'left top'
                }
            });
            {% endif %}
        }

        {% if matriculesSearch['by_year'] is defined -%}
            var _initPlot2 = function() {
                plot = $.plot(_dates_plot_mat, [{{ matriculesSearch['by_year']|json_encode|raw }}], plot_options);

                {% if disable_select_daterange is not defined or disable_select_daterange == false %}
                plot.setSelection({
                    xaxis: {
                        from: {{matriculesSearch['by_year_min']}}-0.45,
                        to: {{matriculesSearch['by_year_max']}}+0.45
                    }
                });

                _dates_plot_mat.bind("plotselected", function (event, ranges) {
                    if ( Math.floor(ranges.xaxis.from) === Math.floor(ranges.xaxis.to)) {
                        filterOnDate(
                            Math.floor(ranges.xaxis.from),
                            Math.floor(ranges.xaxis.to),
                            '{{ matriculesSearch['current_date'] }}',
                            'matricules'
                        );
                    } else {
                        filterOnDate(
                            Math.round(ranges.xaxis.from),
                            Math.round(ranges.xaxis.to),
                            '{{ matriculesSearch['current_date'] }}',
                            'matricules'
                        );
                    }

                }).tooltip({
                    position: {
                        my: 'left bottom',
                        at: 'left top'
                    }
                });
                {% endif %}
            }
        {% endif %}

        if ( _view_params['daterange'] == true ) {
            _dates_plot.removeClass('hidden');
            _dates_plot_mat.removeClass('hidden');
            _initPlot();

            {% if matriculesSearch['by_year'] is defined -%}
            _initPlot2();
            {% endif %}
        }
    {% endif %}

    _setCookie = function() {
        $.cookie('{{ cookie_param_name }}', _view_params, { expires: 365, path: '/' });
    }

    $('#sh_daterange').on('click', function(){
        clickCookie();
        $('#dates_plot').toggleClass('hidden');
        $('#dates_plot_mat').toggleClass('hidden');
        if ( !plot) {
            _initPlot();
            {% if matriculesSearch['by_year'] is defined -%}
            _initPlot2();
            {% endif %}
        }
        $(this).toggleClass('disabled');
        _view_params['daterange'] = !$('#dates_plot_mat').hasClass('hidden');
        _setCookie();
        return false;
    });

    {% if show_maps %}
        var _bindMapHide = function() {
            $('#map').toggleClass('hidden');
            $('#map2').toggleClass('hidden');
            $('#sh_map').toggleClass('disabled');
            _view_params['map'] = !$('#map').hasClass('hidden');
            _setCookie();
            if ( !map ) {
                _initMap();
                {#% if matriculesSearch['by_year'] is defined -%#}
                _initMap2();
                {#% endif %#}
            }
            return false;
        }
        $('#sh_map').on('click', _bindMapHide);

        /***************
        // Maps stuff //
        ***************/
        function facetFeature(e) {
            var _da_url = '{{ path(block('search_path'), {form_name: search_form, query_terms: q, filter_field: 'geoloc'})|raw }}';
            window.location.href  = _da_url + '&filter_value=' + e.target.feature.properties.name;
        }

        function facetFeature2(e) {
            var _da_url = '{{ path(block('search_path'), {form_name: 'matricules', query_terms: q, filter_field: 'geoloc'})|raw }}';
            window.location.href  = _da_url + '&filter_value=' + e.target.feature.properties.name;
        }

        function onEachFeature(feature, layer) {
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: facetFeature
            });
        }

        function onEachFeature2(feature, layer) {
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: facetFeature2
            });
        }

        {% include 'BachHomeBundle:Commons:maps.js.twig' with {'ajax_path': path(block('geojson_path'), {form_name: search_form}), 'from_search': true} %}

        if ( _view_params['map'] == true ) {
            $('#map').removeClass('hidden');
            $('#map2').removeClass('hidden');
            _initMap();
            {#% if matriculesSearch['by_year'] is defined -%#}
            _initMap2();
            {#% endif %#}
        }
    {% endif %}

    function preg_quote( str ) {
        // http://kevin.vanzonneveld.net
        // +   original by: booeyOH
        // +   improved by: Ates Goral (http://magnetiq.com)
        // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
        // +   bugfixed by: Onno Marsman
        // *     example 1: preg_quote("$40");
        // *     returns 1: '\$40'
        // *     example 2: preg_quote("*RRRING* Hello?");
        // *     returns 2: '\*RRRING\* Hello\?'

        return (str+'').replace(/([\\\.\+\*\?\[\^\]\$\(\)\{\}\=\!\<\>\|\:])/g, "\\$1");
    }
    {% include 'BachHomeBundle:Default:jsplayer.js.twig' %}
    _initAudio();
    _initVideo();

    {% block autocomplete %}{% endblock %}
    {% block player %}{% endblock %}
{% endblock %}
