{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'SonataAdminBundle:CRUD:base_edit.html.twig' %}

{% block css %}
    {{ parent() }}
    <link href="{{ asset('js/leaflet/leaflet.css') }}" type="text/css" rel="stylesheet" media="screen" />
    <link href="{{ asset('js/leaflet/leaflet.fullscreen/Control.FullScreen.css') }}" type="text/css" rel="stylesheet" media="screen" />
    <!--[if lte IE 8]><link href="{{ asset('js/leaflet/leaflet.ie.css') }}" type="text/css" rel="stylesheet" media="screen" /><![endif]-->
{% endblock %}
{% block js_calls %}
    {{ parent() }}
    <script src="{{ asset('js/leaflet/leaflet.js') }}" type="text/javascript"></script>
    <script src="{{ asset('js/leaflet/leaflet.fullscreen/Control.FullScreen.js') }}" type="text/javascript"></script>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    var _elt = $('<div id="map"></div>');
    _elt.prependTo('.tab-pane.active');

    {% if object.getId() != null %}
    var map = L.map('map', {
        minZoom: 1
    });
    {% else %}
    var map = L.map('map', {
        minZoom: 1
    }).setView([47.010, 5.087], 5);
    {% endif %}

    var fullScreen = new L.Control.FullScreen();
    map.addControl(fullScreen);

    L.tileLayer('{{ tiles_url }}', {
        maxZoom: 18,
        attribution: '{{ _('© Cartographic data')|escape('js') }} <a href="http://openstreetmap.org">{{ _('OpenStreetMap contributors')|escape('js') }}</a>, {{ _('© Imagery')|escape('js') }} {{ tiles_attribution|raw }}'
    }).addTo(map);

    {% if object.getId() != null %}
    function style(feature) {
        return {
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.7,
            fillColor: '#800026'
        };
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    function highlightFeature(e) {
        var layer = e.target;

        try{
            layer.setStyle({
                weight: 1,
                color: '#666',
                dashArray: '',
                fillOpacity: 0.7
            });

            if (!L.Browser.ie && !L.Browser.opera) {
                layer.bringToFront();
            }
        } catch (ex) {}
    }

    function resetHighlight(e) {
        allpoints.resetStyle(e.target);
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    };

    allpoints = L.geoJson({{ object.geojson|raw  }}, {
        style: style,
        onEachFeature: onEachFeature
    });

    allpoints.addData({"type":"Point","coordinates":[{{ object.lon }}, {{ object.lat }}]});

    var _layers = L.layerGroup([allpoints]).addTo(map);
    map.fitBounds(allpoints.getBounds());
    {% endif %}
{% endblock %}
