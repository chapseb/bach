# Copyright (c) 2014, Anaphore
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     (1) Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
#     (2) Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#
#     (3)The name of the author may not be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

parameters:
    bach_indexation_file_driver_manager.class: Bach\IndexationBundle\Service\FileDriverManager
    bach_indexation_data_bag_factory.class: Bach\IndexationBundle\Service\DataBagFactory
    bach_indexation_file_format_factory.class: Bach\IndexationBundle\Service\FileFormatFactory
    bach_indexation_pre_processor_factory.class: Bach\IndexationBundle\Service\PreProcessorFactory
    bach_indexation_process_arch_file_integration.class: Bach\IndexationBundle\Service\ArchFileIntegration
    bach_indexation_typesfiles.class: Bach\IndexationBundle\Service\TypesFiles
    bach_indexation_documenttype.class: Bach\IndexationBundle\Form\Type\DocumentType
    bach_indexation_nominatim.class: Bach\IndexationBundle\Service\Nominatim

services:
    bach.indexation.file_driver_manager:
        class: "%bach_indexation_file_driver_manager.class%"
        arguments: [ @bach.indexation.file_format_factory, @bach.indexation.pre_processor_factory, @doctrine.orm.entity_manager, '%feature.heritage%', @zend_db ]

    bach.indexation.data_bag_factory:
        class: "%bach_indexation_data_bag_factory.class%"

    bach.indexation.file_format_factory:
        class: "%bach_indexation_file_format_factory.class%"

    bach.indexation.pre_processor_factory:
        class: "%bach_indexation_pre_processor_factory.class%"
        arguments: [ @bach.indexation.data_bag_factory ]

    bach.indexation.process.arch_file_integration:
        class: "%bach_indexation_process_arch_file_integration.class%"
        arguments: [ @bach.indexation.file_driver_manager, @bach.indexation.data_bag_factory, @doctrine.orm.entity_manager, @zend_db ]

    bach.indexation.typesfiles:
        class: '%bach_indexation_typesfiles.class%'
        arguments: [ '%bach.types%', '%bach.typespaths%' ]

    bach.indexation.form.type.document:
        class: '%bach_indexation_documenttype.class%'
        arguments: [ '%bach.types%' ]
        tags:
            - { name: form.type, alias: document}

    bach.indexation.nominatim:
        class: '%bach_indexation_nominatim.class%'

    publication.logger:
        class: Symfony\Bridge\Monolog\Logger
        arguments: [app]
        calls:
            - [ pushHandler, [@publication.logger_handler] ]

    publication.logger_handler:
        class: Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/publication.log, 200]
        calls:
            - [ setFormatter, [@publication.formatter]]

    publication.formatter:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] %%level_name%% - %%message%%\n"

    oai.logger:
        class: Symfony\Bridge\Monolog\Logger
        arguments: [app]
        calls:
            - [ pushHandler, [@oai.logger_handler] ]

    oai.logger_handler:
        class: Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/oai.log, 200]
        calls:
            - [ setFormatter, [@oai.formatter]]

    oai.formatter:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] %%level_name%% - %%message%%\n"

    zend_db:
        class: Bach\IndexationBundle\Service\ZendDb
        arguments: [ "%database_driver%", "%database_host%", "%database_port%", "%database_name%", "%database_user%", "%database_password%" ]

