{#

This file is part Bach.

(c) Anaphore <info@anaphore.eu>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% embed base_template %}

    {% block css %}
        {{ parent() }}
        <link href="{{ asset('js/leaflet/leaflet.css') }}" type="text/css" rel="stylesheet" media="screen" />
        <link href="{{ asset('js/leaflet/leaflet.fullscreen/Control.FullScreen.css') }}" type="text/css" rel="stylesheet" media="screen" />
    {% endblock %}

    {% block js_calls %}
        {{ parent() }}
        <script src="{{ asset('js/leaflet/leaflet.js') }}" type="text/javascript"></script>
        <script src="{{ asset('js/leaflet/leaflet.fullscreen/Control.FullScreen.js') }}" type="text/javascript"></script>
    {% endblock %}

    {% block sonata_admin_content %}
        <div id="map" class="big"></div>
    {% endblock %}

    {% block javascripts %}
        var allpoints;
        var current;
        var selected;

        /**
        * Returns element height, including margins
        */
        function _eltRealSize(_elt) {
            var _s = 0;
            _s += _elt.outerHeight();
            _s += parseFloat(_elt.css('margin-top').replace('px', ''));
            _s += parseFloat(_elt.css('margin-bottom').replace('px', ''));
            return _s;
        }

        var remove_href = '{{ path('bach_remove_geoloc', {name: 'NAME'}) }}';
        var edit_href = '{{ path('bach_toponym_geoloc', {name: 'NAME'}) }}';

        function onEachFeature(feature, layer) {
            popup = layer.bindPopup();
            var _name = feature.properties.name;
            popup = layer.bindPopup(
                '<strong>' + _name + '</strong> (' +
                feature.properties.results + ' {% trans %}result(s){% endtrans %})'
            );
        }

        var _layers;

        $(function(){
            var wheight = $(window).height();
            var _oSize = 0;

            _oSize += _eltRealSize($('#navigation'));
            _oSize += _eltRealSize($('.navbar'));
            _oSize += parseFloat(
                $('#container').css('padding-top').replace('px', '')
            );
            _oSize += parseFloat(
                $('#container').css('padding-bottom').replace('px', '')
            );

            var newHeight = Math.floor(wheight - _oSize) + "px";
            $("#map").css("height", newHeight);

            var map;
            var _layers;

            map = L.map('map', {
                minZoom: 1
            }).on('popupopen', function(e){
                var _popup = e.popup;
                var _container = $(_popup._container);
                var _feature = _popup._source.feature;
                var _content = _container.find('.leaflet-popup-content');

                if ( _content.find('a.remove').length == 0 ) {
                    _content = _content.html();
                    _content += '<ul>';
                    _content += '<li><a class="remove" href="' + remove_href.replace('NAME', _feature.properties.name)  + '">{% trans %}remove{% endtrans%}</a></li>';
                    _content += '<li><a class="edit" href="' + edit_href.replace('NAME', _feature.properties.name)  + '">{% trans %}edit{% endtrans%}</a></li>';
                    _content += '</ul>';

                    _popup.setContent(_content);

                    _container = $(_container);
                    _container.find('a.remove').on('click', function() {
                        var _href = $(this).attr('href');
                        $.ajax({
                            url: _href,
                            {% include '::loader.js.twig' with {'silent_error': true} %}
                            success: function(data) {
                                var _name = _feature.properties.name;
                                allpoints.removeLayer(allpoints.getLayer(_popup._source._leaflet_id));
                                alert('{% trans %}NAME has been removed{% endtrans %}'.replace('NAME', _name));
                            }
                        });
                        return false;
                    });

                    _container.find('a.edit').on('click', function() {
                        console.log('edit clicked');
                        return false;
                    });
                }
            });


            {% for field, geo in geojson -%}
            var {{ field|replace({'-': '_'}) }}_points = L.geoJson({{ geo|raw }}, {
                onEachFeature: onEachFeature
            });
            var {{ field|replace({'-': '_'}) }}_layer = L.layerGroup([{{ field|replace({'-': '_'}) }}_points]);
            {% endfor %}

            var overlays = {
            {% for field in geojson|keys -%}
                '{{ field }}': {{ field|replace({'-': '_'}) }}_layer{% if not loop.last %},{% endif %}
            {% endfor %}
            };
            var _groups = L.control.layers({}, overlays).addTo(map);

            var _layers = L.layerGroup([
                {% for field in geojson|keys -%}
                {{ field|replace({'-': '_'}) }}_layer{% if not loop.last %},{% endif %}
            {% endfor %}
            ]).addTo(map);

            var allpoints = L.featureGroup([
                {%- for field in geojson|keys -%}
                {{ field|replace({'-': '_'}) }}_points{% if not loop.last %},{% endif %}
            {%- endfor -%}
            ]);

            map.fitBounds(allpoints.getBounds(), {
                padding: [50, 50],
                maxZoom: 13
            });

            var fullScreen = new L.Control.FullScreen();
            map.addControl(fullScreen);

            L.tileLayer('{{ tiles_url }}', {
                maxZoom: 18,
                attribution: '{% trans %}© Cartographic data{% endtrans %} <a href="http://openstreetmap.org">{% trans%}OpenStreetMap contributors{% endtrans %}</a>, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, {% trans %}© Imagery{% endtrans %} {{ tiles_attribution|raw }}'
            }).addTo(map);

        });
    {% endblock %}
{% endembed %}
